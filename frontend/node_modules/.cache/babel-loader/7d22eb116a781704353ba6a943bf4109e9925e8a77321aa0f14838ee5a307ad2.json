{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst faIRPickers = {\n  // Calendar navigation\n  previousMonth: 'ماه گذشته',\n  nextMonth: 'ماه آینده',\n  // View navigation\n  openPreviousView: 'نمای قبلی',\n  openNextView: 'نمای بعدی',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'نمای سال باز است، رفتن به نمای تقویم' : 'نمای تقویم باز است، رفتن به نمای سال',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `نمای ورودی متن باز است، رفتن به نمای ${viewType}` : `نمای ${viewType} باز است، رفتن به نمای ورودی متن`,\n  // DateRange placeholders\n  start: 'شروع',\n  end: 'پایان',\n  // Action bar\n  cancelButtonLabel: 'لغو',\n  clearButtonLabel: 'پاک کردن',\n  okButtonLabel: 'اوکی',\n  todayButtonLabel: 'امروز',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'تاریخ را انتخاب کنید',\n  dateTimePickerDefaultToolbarTitle: 'تاریخ و ساعت را انتخاب کنید',\n  timePickerDefaultToolbarTitle: 'ساعت را انتخاب کنید',\n  dateRangePickerDefaultToolbarTitle: 'محدوده تاریخ را انتخاب کنید',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'هیچ ساعتی انتخاب نشده است' : `ساعت انتخاب ${adapter.format(time, 'fullTime')} می باشد`}`,\n  hoursClockNumberText: hours => `${hours} ساعت ها`,\n  minutesClockNumberText: minutes => `${minutes} دقیقه ها`,\n  secondsClockNumberText: seconds => `${seconds} ثانیه ها`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `تاریخ را انتخاب کنید، تاریخ انتخاب شده ${utils.format(utils.date(rawValue), 'fullDate')} می باشد` : 'تاریخ را انتخاب کنید',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `ساعت را انتخاب کنید، ساعت انتخاب شده ${utils.format(utils.date(rawValue), 'fullTime')} می باشد` : 'ساعت را انتخاب کنید',\n  // Table labels\n  timeTableLabel: 'انتخاب تاریخ',\n  dateTableLabel: 'انتخاب ساعت'\n};\nexport const faIR = getPickersLocalization(faIRPickers);","map":{"version":3,"names":["getPickersLocalization","faIRPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","faIR"],"sources":["C:/Users/shino/Documents/WEB PROJECTS/LMS/frontend/node_modules/@mui/x-date-pickers/locales/faIR.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst faIRPickers = {\n  // Calendar navigation\n  previousMonth: 'ماه گذشته',\n  nextMonth: 'ماه آینده',\n  // View navigation\n  openPreviousView: 'نمای قبلی',\n  openNextView: 'نمای بعدی',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'نمای سال باز است، رفتن به نمای تقویم' : 'نمای تقویم باز است، رفتن به نمای سال',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `نمای ورودی متن باز است، رفتن به نمای ${viewType}` : `نمای ${viewType} باز است، رفتن به نمای ورودی متن`,\n  // DateRange placeholders\n  start: 'شروع',\n  end: 'پایان',\n  // Action bar\n  cancelButtonLabel: 'لغو',\n  clearButtonLabel: 'پاک کردن',\n  okButtonLabel: 'اوکی',\n  todayButtonLabel: 'امروز',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'تاریخ را انتخاب کنید',\n  dateTimePickerDefaultToolbarTitle: 'تاریخ و ساعت را انتخاب کنید',\n  timePickerDefaultToolbarTitle: 'ساعت را انتخاب کنید',\n  dateRangePickerDefaultToolbarTitle: 'محدوده تاریخ را انتخاب کنید',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'هیچ ساعتی انتخاب نشده است' : `ساعت انتخاب ${adapter.format(time, 'fullTime')} می باشد`}`,\n  hoursClockNumberText: hours => `${hours} ساعت ها`,\n  minutesClockNumberText: minutes => `${minutes} دقیقه ها`,\n  secondsClockNumberText: seconds => `${seconds} ثانیه ها`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `تاریخ را انتخاب کنید، تاریخ انتخاب شده ${utils.format(utils.date(rawValue), 'fullDate')} می باشد` : 'تاریخ را انتخاب کنید',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `ساعت را انتخاب کنید، ساعت انتخاب شده ${utils.format(utils.date(rawValue), 'fullTime')} می باشد` : 'ساعت را انتخاب کنید',\n  // Table labels\n  timeTableLabel: 'انتخاب تاریخ',\n  dateTableLabel: 'انتخاب ساعت'\n};\nexport const faIR = getPickersLocalization(faIRPickers);"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,gCAAgC;AACvE,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,WAAW;EAC1BC,SAAS,EAAE,WAAW;EACtB;EACAC,gBAAgB,EAAE,WAAW;EAC7BC,YAAY,EAAE,WAAW;EACzBC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAM,GAAG,sCAAsC,GAAG,sCAAsC;EAC/IC,8BAA8B,EAAE,CAACC,mBAAmB,EAAEC,QAAQ,KAAKD,mBAAmB,GAAI,wCAAuCC,QAAS,EAAC,GAAI,QAAOA,QAAS,kCAAiC;EAChM;EACAC,KAAK,EAAE,MAAM;EACbC,GAAG,EAAE,OAAO;EACZ;EACAC,iBAAiB,EAAE,KAAK;EACxBC,gBAAgB,EAAE,UAAU;EAC5BC,aAAa,EAAE,MAAM;EACrBC,gBAAgB,EAAE,OAAO;EACzB;EACAC,6BAA6B,EAAE,sBAAsB;EACrDC,iCAAiC,EAAE,6BAA6B;EAChEC,6BAA6B,EAAE,qBAAqB;EACpDC,kCAAkC,EAAE,6BAA6B;EACjE;EACAC,cAAc,EAAE,CAACd,IAAI,EAAEe,IAAI,EAAEC,OAAO,KAAM,UAAShB,IAAK,KAAIe,IAAI,KAAK,IAAI,GAAG,2BAA2B,GAAI,eAAcC,OAAO,CAACC,MAAM,CAACF,IAAI,EAAE,UAAU,CAAE,UAAU,EAAC;EACrKG,oBAAoB,EAAEC,KAAK,IAAK,GAAEA,KAAM,UAAS;EACjDC,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,WAAU;EACxDC,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,WAAU;EACxD;EACAC,sBAAsB,EAAE,CAACC,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,GAAI,0CAAyCC,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAE,UAAS,GAAG,sBAAsB;EAC1NI,sBAAsB,EAAE,CAACJ,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,GAAI,wCAAuCC,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAE,UAAS,GAAG,qBAAqB;EACvN;EACAK,cAAc,EAAE,cAAc;EAC9BC,cAAc,EAAE;AAClB,CAAC;AACD,OAAO,MAAMC,IAAI,GAAGvC,sBAAsB,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}